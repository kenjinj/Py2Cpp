    1  import sys
		IDENT_T		import
		IDENT_T		sys
    2  
    3  #takes 2 integers and returns 
    4  #common denominator greatest
    5  def gcd(a, b):
		IDENT_T		def
		IDENT_T		gcd
		LPARENT_T		(
		IDENT_T		a
		COMMA_T		,
		IDENT_T		b
		RPAREN_T		)
		COLON_T		:
    6  	while b != 0:
		TAB_T		\t
		IDENT_T		while
		IDENT_T		b
		NOTEQ_T		!=
		INTLIT_T		0
		COLON_T		:
    7  		temp = b 
		TAB_T		\t
		TAB_T		\t
		IDENT_T		temp
		ASSIGN_T		=
		IDENT_T		b
    8  		b = a % b
		TAB_T		\t
		TAB_T		\t
		IDENT_T		b
		ASSIGN_T		=
		IDENT_T		a
		MOD_T		%
		IDENT_T		b
    9  		a = temp
		TAB_T		\t
		TAB_T		\t
		IDENT_T		a
		ASSIGN_T		=
		IDENT_T		temp
   10  	return a
		TAB_T		\t
		IDENT_T		return
		IDENT_T		a
   11  
   12  def compare(a, b):
		IDENT_T		def
		IDENT_T		compare
		LPARENT_T		(
		IDENT_T		a
		COMMA_T		,
		IDENT_T		b
		RPAREN_T		)
		COLON_T		:
   13  	x = (a[0] * b[1])
		TAB_T		\t
		IDENT_T		x
		ASSIGN_T		=
		LPARENT_T		(
		IDENT_T		a
		LBRACKET_T		[
		INTLIT_T		0
		RBRACKET_T		]
		MULT_T		*
		IDENT_T		b
		LBRACKET_T		[
		INTLIT_T		1
		RBRACKET_T		]
		RPAREN_T		)
   14  	y = (b[0] * a[1])
		TAB_T		\t
		IDENT_T		y
		ASSIGN_T		=
		LPARENT_T		(
		IDENT_T		b
		LBRACKET_T		[
		INTLIT_T		0
		RBRACKET_T		]
		MULT_T		*
		IDENT_T		a
		LBRACKET_T		[
		INTLIT_T		1
		RBRACKET_T		]
		RPAREN_T		)
   15  	if (x < y):
		TAB_T		\t
		IDENT_T		if
		LPARENT_T		(
		IDENT_T		x
		LT_T		<
		IDENT_T		y
		RPAREN_T		)
		COLON_T		:
   16  		return -1
		TAB_T		\t
		TAB_T		\t
		IDENT_T		return
		MINUS_T		-
		INTLIT_T		1
   17  	elif (x == y):
		TAB_T		\t
		IDENT_T		elif
		LPARENT_T		(
		IDENT_T		x
		EQUAL_T		==
		IDENT_T		y
		RPAREN_T		)
		COLON_T		:
   18  		return 0
		TAB_T		\t
		TAB_T		\t
		IDENT_T		return
		INTLIT_T		0
   19  	else:
		TAB_T		\t
		IDENT_T		else
		COLON_T		:
   20  		return 1
		TAB_T		\t
		TAB_T		\t
		IDENT_T		return
		INTLIT_T		1

.     .     .
0 Error found in testFraction.py
